plugins {
	id 'fabric-loom' version '1.8-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Mod Menu + Trinkets
	maven { url = "https://maven.terraformersmc.com/releases/" }

	// Create Fabric and some required libs
	maven { url = "https://mvn.devos.one/snapshots/" }
	maven { url = "https://mvn.devos.one/releases/" }
	maven { url = "https://jitpack.io/" }
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
	maven { url = "https://maven.tterrag.com/" }
	maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" }
	maven { url = "https://maven.fabricmc.net/" }
	maven { url = "https://maven.ladysnake.org/releases" }
	maven { url = "https://modmaven.dev" }
	maven { url = "https://maven.shedaniel.me/" }
	maven { url = "https://maven.parchmentmc.org" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	mappings loom.layered {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-$minecraft_version:$parchment_version@zip")
	}

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Create Fabric
	modCompileOnly("com.simibubi.create:create-fabric-${minecraft_version}:${create_fabric_version}")

	// Mod Menu
	modImplementation("com.terraformersmc:modmenu:${modmenu_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}